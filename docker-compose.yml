version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: outline_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: outline
      POSTGRES_USER: outline
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U outline"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: outline_redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "127.0.0.1:6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  outline:
    image: outlinewiki/outline:latest
    container_name: outline_app
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      # Database
      DATABASE_URL: postgresql://outline:${POSTGRES_PASSWORD}@postgres:5432/outline
      DATABASE_URL_TEST: postgresql://outline:${POSTGRES_PASSWORD}@postgres:5432/outline_test
      
      # Redis
      REDIS_URL: redis://redis:6379
      
      # App
      NODE_ENV: production
      SECRET_KEY: ${SECRET_KEY}
      UTILS_SECRET: ${UTILS_SECRET}
      
      # URL
      URL: ${OUTLINE_URL}
      
      # Google OAuth
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      
      # Email (опционально)
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SMTP_FROM_EMAIL: ${SMTP_FROM_EMAIL}
      
      # File storage (опционально)
      AWS_S3_BUCKET: ${AWS_S3_BUCKET}
      AWS_S3_REGION: ${AWS_S3_REGION}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      
      # Admin
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      
      # Security
      SESSION_SECRET: ${SESSION_SECRET}
      COOKIE_SECRET: ${COOKIE_SECRET}
      
      # Features
      ENABLE_REGISTRATION: ${ENABLE_REGISTRATION}
      ENABLE_ANALYTICS: ${ENABLE_ANALYTICS}
      
    ports:
      - "3000:3000"
    volumes:
      - outline_uploads:/opt/outline/build/uploads
      - ./logs:/opt/outline/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:
  outline_uploads:
